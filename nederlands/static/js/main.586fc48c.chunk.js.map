{"version":3,"sources":["components/results.js","components/streakCounter.js","components/openQuestion.js","components/verbs.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["CorrectWord","this","props","word","React","Component","WrongWord","correction","CorrectAnswer","className","lastAnswer","words","map","value","_","WrongAnswer","results","isCorrect","i","criteria","exercise","ResultsComponent","areAllCorrect","StreakCounter","current","record","OpenQuestionForm","handleChange","event","setState","answer","target","handleSubmit","preventDefault","answerCallback","state","bind","question","onSubmit","description","onChange","type","placeholder","id","VerbsData","werkworden","werkwordenJson","h1","h2","h3","PracticeWithoutRouter","prepareExercise","exercisePool","difficulty","length","Math","random","checkAnswer","input","split","x","trim","idx","toLowerCase","allCorrect","reduce","acc","newStreak","score","currentStreak","newMaxScore","maxStreak","componentDidMount","match","params","buildQuestion","Infinitief","Vertaling","buildDescription","buildPlaceholder","VerbsOpenQuestion","withRouter","Home","to","App","basename","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.586fc48c.chunk.js","sourcesContent":["import React from 'react'\n\nclass CorrectWord extends React.Component {\n  render () {\n    return (\n      <span>{this.props.word} âœ… </span>\n    )\n  }\n}\n\nclass WrongWord extends React.Component {\n  render () {\n    return (\n      <span><strike>{this.props.word}</strike> {this.props.correction}<br></br></span>\n    )\n  }\n}\n\nclass CorrectAnswer extends React.Component {\n  render () {\n    return (\n      <div className=\"answer answer-correct\">\n        <p>\n          {this.props.lastAnswer.words.map((value, _) => {\n            return <CorrectWord word={value} />\n          })}\n        </p>\n      </div>\n    )\n  }\n}\n\nclass WrongAnswer extends React.Component {\n  render () {\n    return (\n      <div className=\"answer answer-wrong\">\n        <p>\n          {this.props.lastAnswer.results.map((isCorrect, i) => {\n            if (isCorrect) {\n              return <CorrectWord word={this.props.lastAnswer.words[i]} />\n            } else {\n              const criteria = this.props.lastAnswer.criteria\n              return <WrongWord word={this.props.lastAnswer.words[i]} correction={this.props.lastAnswer.exercise[criteria[i]]} />\n            }\n          })}\n        </p>\n      </div>\n    )\n  }\n}\n\nclass ResultsComponent extends React.Component {\n  render () {\n    return (\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-append\">\n          {this.props.lastAnswer.areAllCorrect\n            ? <CorrectAnswer lastAnswer={this.props.lastAnswer} />\n            : <WrongAnswer lastAnswer={this.props.lastAnswer} />}\n        </div>\n      </div>)\n  }\n}\n\nexport default ResultsComponent\n","import React from 'react'\n\nclass StreakCounter extends React.Component {\n  render () {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm\">\n            <h3>Current streak: {this.props.current}</h3>\n          </div>\n          <div className=\"col-sm\">\n            <h3>Record: {this.props.record}</h3>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default StreakCounter\n","import React from 'react'\n\nclass OpenQuestionForm extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = { answer: '' }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n    handleChange = (event) => {\n      this.setState({ answer: event.target.value })\n    }\n\n    handleSubmit = (event) => {\n      event.preventDefault()\n      this.props.answerCallback(this.state.answer)\n      this.setState({ answer: '' })\n    }\n\n    render () {\n      return (\n        <div>\n          <h2>{this.props.question}</h2>\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-append\">\n              <form className=\"form-layout\" onSubmit={this.handleSubmit}>\n                <span className=\"help-input\">{this.props.description}</span>\n                <input value={this.state.answer} onChange={this.handleChange} type=\"text\" className=\"form-control\" placeholder={this.props.placeholder} />\n                <button className=\"btn btn-outline-secondary\" type=\"submit\" id=\"submit-answer\">Check</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default OpenQuestionForm\n","import React from 'react'\nimport {\n  withRouter\n} from 'react-router-dom'\nimport ResultsComponent from './results'\nimport StreakCounter from './streakCounter'\nimport werkwordenJson from '../data/werkworden.json'\nimport OpenQuestionForm from './openQuestion'\nimport h1Json from '../data/h1.json'\nimport h2Json from '../data/h2.json'\nimport h3Json from '../data/h3.json'\n\nconst VerbsData = {\n  werkworden: werkwordenJson,\n  h1: h1Json,\n  h2: h2Json,\n  h3: h3Json\n}\n\nclass PracticeWithoutRouter extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      exercise: {},\n      score: { currentStreak: 0, maxStreak: 0 },\n      lastAnswer: {\n        words: [],\n        results: [],\n        criteria: [],\n        exercise: {},\n        areAllCorrect: null\n      },\n      difficulty: 'werkworden'\n    }\n  }\n\n    prepareExercise = () => {\n      const exercisePool = VerbsData[this.state.difficulty]\n      if (typeof exercisePool !== 'undefined') {\n        this.setState({\n          exercise: exercisePool[exercisePool.length * Math.random() | 0]\n        })\n      }\n    }\n\n    checkAnswer = (input) => {\n      const criteria = ['Imperfectum', 'Perfectum']\n      const answer = input.split(',').map(x => x.trim())\n      const results = answer.map((value, idx) => value.toLowerCase() === this.state.exercise[criteria[idx]].toLowerCase())\n      const allCorrect = results.reduce((acc, value) => {\n        return acc && value\n      }, true)\n      const newStreak = allCorrect ? this.state.score.currentStreak + 1 : 0\n      const newMaxScore = newStreak > this.state.score.maxStreak ? newStreak : this.state.score.maxStreak\n      this.setState({\n        lastAnswer: {\n          areAllCorrect: allCorrect,\n          words: answer,\n          results: results,\n          criteria: criteria,\n          exercise: this.state.exercise\n        },\n        score: {\n          currentStreak: newStreak,\n          maxStreak: newMaxScore\n        }\n      }, this.prepareExercise)\n    }\n\n    componentDidMount = () => {\n      this.setState({\n        difficulty: this.props.match.params.id\n      }, this.prepareExercise)\n    }\n\n    buildQuestion = () => {\n      return `${this.state.exercise.Infinitief} (${this.state.exercise.Vertaling})`\n    }\n\n    buildDescription = () => {\n      return (\n        <div>If the verb is <b>gaan</b> you need to type: 'ging, is gegaan':</div>\n      )\n    }\n\n    buildPlaceholder = () => {\n      return 'Imperfectum, (is) perfectum'\n    }\n\n    render () {\n      return (\n        <div>\n          <StreakCounter current={this.state.score.currentStreak} record={this.state.score.maxStreak}/>\n          <br></br>\n          <OpenQuestionForm question={this.buildQuestion()} description={this.buildDescription()} placeholder={this.buildPlaceholder()} answerCallback={this.checkAnswer} />\n          {this.state.lastAnswer.areAllCorrect === null ? null : <ResultsComponent lastAnswer={this.state.lastAnswer} />}\n          <br></br>\n          <br></br>\n          <h5>Set of verbs: {this.state.difficulty}</h5>\n        </div>\n      )\n    }\n}\n\nconst VerbsOpenQuestion = withRouter(PracticeWithoutRouter)\n\nexport default VerbsOpenQuestion\n","import React from 'react'\nimport {\n  Link\n} from 'react-router-dom'\nimport './home.css'\n\nfunction Home () {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col\"><h1>Welkom! Kies jouw opdracht:</h1></div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h2>Werkworden</h2>\n          {/* Remember to give different URLs to each button and add to the router in App.js */}\n          <ul className=\"list-unstyleld\">\n            <li className=\"list-group-item list-group-item-action rounded-top\"><Link to={'/werkworden'}>Basiswerkwoorden (Oranje)</Link></li>\n            <li className=\"list-group-item list-group-item-action\"><Link to={'/h1'}>Hoofdstuck 1 werkworden</Link></li>\n            <li className=\"list-group-item list-group-item-action\"><Link to={'/h2'}>Hoofdstuck 2 werkworden</Link></li>\n            <li className=\"list-group-item list-group-item-action rounded-bottom\"><Link to={'/h3'}>Hoofdstuck 3 werkworden</Link></li>\n          </ul>\n        </div>\n        <div className=\"col\">\n          <h2 className=\"col\">Vocabulaire</h2>\n          <ul className=\"list-unstyleld\">\n            <li className=\"list-group-item list-group-item-action rounded-top rounded-bottom\">Under construction</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom'\nimport './App.css'\nimport VerbsOpenQuestion from './components/verbs'\nimport Home from './components/home'\n\nfunction App () {\n  return (\n    <div className=\"App\">\n      <Router basename={'/nederlands'}>\n        <Switch>\n          <Route exact path={'/'}>\n            <Home />\n          </Route>\n          <Route path={'/:id'}>\n            <VerbsOpenQuestion />\n          </Route>\n        </Switch>\n      </Router>\n    </div >\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}